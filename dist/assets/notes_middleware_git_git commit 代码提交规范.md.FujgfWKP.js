import{_ as e,c as i,o as t,aa as a}from"./chunks/framework.BNtO-cOy.js";const g=JSON.parse('{"title":"git commit 代码提交规范","description":"","frontmatter":{},"headers":[],"relativePath":"notes/middleware/git/git commit 代码提交规范.md","filePath":"notes/middleware/git/git commit 代码提交规范.md","lastUpdated":1741351005000}'),l={name:"notes/middleware/git/git commit 代码提交规范.md"},o=a('<h1 id="git-commit-代码提交规范" tabindex="-1">git commit 代码提交规范 <a class="header-anchor" href="#git-commit-代码提交规范" aria-label="Permalink to &quot;git commit 代码提交规范&quot;">​</a></h1><h2 id="git-提交规范" tabindex="-1">git 提交规范 <a class="header-anchor" href="#git-提交规范" aria-label="Permalink to &quot;git 提交规范&quot;">​</a></h2><h3 id="commitizen" tabindex="-1"><a href="https://www.npmjs.com/package/commitizen" target="_blank" rel="noreferrer">commitizen</a> <a class="header-anchor" href="#commitizen" aria-label="Permalink to &quot;[commitizen](https://www.npmjs.com/package/commitizen)&quot;">​</a></h3><p><a href="https://github.com/angular/angular/commits/master" target="_blank" rel="noreferrer">AngularJS</a> 在 github 上 的提交记录被业内许多人认可，逐渐被大家引用。</p><h4 id="格式" tabindex="-1">格式 <a class="header-anchor" href="#格式" aria-label="Permalink to &quot;格式&quot;">​</a></h4><div class="language-less vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">type(scope): subject;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol><li><p>type（必须） : commit 的类别，只允许使用下面几个标识：</p><ul><li><code>feat</code> : 新功能</li><li><code>fix</code> : 修复 bug</li><li>docs : 文档改变</li><li>style : 代码格式改变</li><li><code>refactor</code> : 某个已有功能重构</li><li>perf : 性能优化</li><li>test : 增加测试</li><li><code>build</code> : 改变了 build 工具 如 grunt 换成了 npm</li><li>revert : 撤销上一次的 commit</li><li>chore : 构建过程或辅助工具的变动</li></ul></li><li><p>scope（可选） : 用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p></li><li><p>subject（必须） : commit 的简短描述，不超过 50 个字符。 commitizen 是一个撰写合格 Commit message 的工具， 遵循 Angular 的提交规范。</p></li></ol><h4 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h4><ul><li>符合业内标准（许多项目使用 AngularJS 的 commit 规范）</li><li>提交过程更加规范（使用 commitizen 规范工具，风格统一）</li><li>能够生成风格统一的 commit log（type(scope):subject)</li></ul><h4 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h4><ul><li>需要安装 commitizen 工具包，使项目更大、更重了（适合大型开源项目）</li><li>提交过程受约束较大</li><li>有一定的学习成本</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://www.cnblogs.com/anly95/p/13163384.html" target="_blank" rel="noreferrer">git commit 代码提交规范</a></p><p><a href="https://blog.csdn.net/chenyajundd/article/details/139322838" target="_blank" rel="noreferrer">git 代码提交规范，feat，fix，chore 都是什么意思?</a></p></div>',12),r=[o];function c(s,n,m,d,h,p){return t(),i("div",null,r)}const _=e(l,[["render",c]]);export{g as __pageData,_ as default};
